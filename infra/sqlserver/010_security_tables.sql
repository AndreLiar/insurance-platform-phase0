-- SECURITY
CREATE TABLE SECURITY.USER_ACCOUNT (
  id               UNIQUEIDENTIFIER NOT NULL DEFAULT NEWSEQUENTIALID() CONSTRAINT PK_USER_ACCOUNT PRIMARY KEY,
  tenant_id        UNIQUEIDENTIFIER NOT NULL,
  username         NVARCHAR(100)    NOT NULL,
  email            NVARCHAR(255)    NOT NULL,
  password_hash    NVARCHAR(255)    NULL,        -- NULL for B2C users (external auth)
  external_user_id NVARCHAR(255)    NULL,        -- B2C Object ID
  auth_provider    NVARCHAR(50)     NOT NULL DEFAULT 'LOCAL', -- 'LOCAL', 'AZURE_B2C'
  first_name       NVARCHAR(100)    NULL,
  last_name        NVARCHAR(100)    NULL,
  is_active        BIT              NOT NULL DEFAULT 1,
  last_login       DATETIME2        NULL,
  created_at       DATETIME2        NOT NULL DEFAULT SYSUTCDATETIME(),
  updated_at       DATETIME2        NOT NULL DEFAULT SYSUTCDATETIME(),
  is_deleted       BIT              NOT NULL DEFAULT 0,
  version          ROWVERSION
);

CREATE TABLE SECURITY.ROLE (
  id            UNIQUEIDENTIFIER NOT NULL DEFAULT NEWSEQUENTIALID() CONSTRAINT PK_ROLE PRIMARY KEY,
  tenant_id     UNIQUEIDENTIFIER NOT NULL,
  role_name     NVARCHAR(100)    NOT NULL,
  description   NVARCHAR(255)    NULL,
  is_system_role BIT             NOT NULL DEFAULT 0,
  created_at    DATETIME2        NOT NULL DEFAULT SYSUTCDATETIME(),
  updated_at    DATETIME2        NOT NULL DEFAULT SYSUTCDATETIME(),
  is_deleted    BIT              NOT NULL DEFAULT 0,
  version       ROWVERSION
);

CREATE TABLE SECURITY.PERMISSION (
  id              UNIQUEIDENTIFIER NOT NULL DEFAULT NEWSEQUENTIALID() CONSTRAINT PK_PERMISSION PRIMARY KEY,
  permission_name NVARCHAR(150)    NOT NULL,
  description     NVARCHAR(255)    NULL,
  resource        NVARCHAR(100)    NOT NULL,
  action          NVARCHAR(50)     NOT NULL,
  created_at      DATETIME2        NOT NULL DEFAULT SYSUTCDATETIME(),
  updated_at      DATETIME2        NOT NULL DEFAULT SYSUTCDATETIME(),
  is_deleted      BIT              NOT NULL DEFAULT 0,
  version         ROWVERSION
);

CREATE TABLE SECURITY.USER_ROLE (
  id            UNIQUEIDENTIFIER NOT NULL DEFAULT NEWSEQUENTIALID() CONSTRAINT PK_USER_ROLE PRIMARY KEY,
  user_id       UNIQUEIDENTIFIER NOT NULL,
  role_id       UNIQUEIDENTIFIER NOT NULL,
  assigned_date DATE             NOT NULL DEFAULT CONVERT(date, SYSUTCDATETIME()),
  assigned_by   UNIQUEIDENTIFIER NULL,
  created_at    DATETIME2        NOT NULL DEFAULT SYSUTCDATETIME(),
  updated_at    DATETIME2        NOT NULL DEFAULT SYSUTCDATETIME(),
  is_deleted    BIT              NOT NULL DEFAULT 0,
  version       ROWVERSION,
  CONSTRAINT FK_USER_ROLE_USER FOREIGN KEY (user_id) REFERENCES SECURITY.USER_ACCOUNT(id),
  CONSTRAINT FK_USER_ROLE_ROLE FOREIGN KEY (role_id) REFERENCES SECURITY.ROLE(id)
);

CREATE TABLE SECURITY.ROLE_PERMISSION (
  id            UNIQUEIDENTIFIER NOT NULL DEFAULT NEWSEQUENTIALID() CONSTRAINT PK_ROLE_PERMISSION PRIMARY KEY,
  role_id       UNIQUEIDENTIFIER NOT NULL,
  permission_id UNIQUEIDENTIFIER NOT NULL,
  granted_date  DATE             NOT NULL DEFAULT CONVERT(date, SYSUTCDATETIME()),
  granted_by    UNIQUEIDENTIFIER NULL,
  created_at    DATETIME2        NOT NULL DEFAULT SYSUTCDATETIME(),
  updated_at    DATETIME2        NOT NULL DEFAULT SYSUTCDATETIME(),
  is_deleted    BIT              NOT NULL DEFAULT 0,
  version       ROWVERSION,
  CONSTRAINT FK_RP_ROLE FOREIGN KEY (role_id) REFERENCES SECURITY.ROLE(id),
  CONSTRAINT FK_RP_PERM FOREIGN KEY (permission_id) REFERENCES SECURITY.PERMISSION(id)
);
GO